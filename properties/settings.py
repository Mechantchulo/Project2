"""
Django settings for properties project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tz-dq9k$aa3%_=k%^(h4(3#$x1(^ex^xed&u=g1=*=3%3u(2v3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # 'crispy_forms',
    # 'crispy_bootstrap4',

    # Third-party apps
    'allauth', #Required by django-allauth
    'allauth.account', #Handles user accounts
    'allauth.socialaccount', #Enables social media account login
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.instagram',

    #My apps
    'dashboard',
    'listings',
    'bookings',
    'users.apps.UsersConfig', # Ensure users app is registered
    'profiles.apps.ProfilesConfig',

]
# CRISPY_TEMPLATE_PACK = 'bootstrap5'
# CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
#
# CRISPY_TEMPLATE_PACKS = {
#     'bootstrap5': 'crispy_bootstrap5/bootstrap5',
# }
#
# CRISPY_CLASS_CONVERTERS = {
#     'bootstrap5': {
#         'uni_form': 'bootstrap5/uni_form.html',
#         'uni_form.form': 'bootstrap5/form.html',
#         'uni_form.formset': 'bootstrap5/formset.html',
#         'uni_form.formrow': 'bootstrap5/formrow.html',
#         'uni_form.field': 'bootstrap5/field.html',
#         'uni_form.singlecheckbox': 'bootstrap5/singlecheckbox.html',
#         'uni_form.error_list': 'bootstrap5/error_list.html',
#         'uni_form.help_text': 'bootstrap5/help_text.html',
#         'uni_form.error_text': 'bootstrap5/error_text.html',
#         'uni_form.error_summary': 'bootstrap5/error_summary.html',
#         'uni_form.form_errors': 'bootstrap5/form_errors.html',
#         'uni_form.preview': 'bootstrap5/preview.html',
#     }
# }


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend', # Default authentication
    'allauth.account.auth_backends.AuthenticationBackend', # Allauth backend
]

SITE_ID = 1  # Required for django-allauth to work

LOGIN_URL = 'users/login/'
LOGIN_REDIRECT_URL = '/' # Redirects to home after login
LOGOUT_REDIRECT_URL = '/' # Redirects to home after logout
ACCOUNT_AUTHENTICATION_METHOD = 'username' # Authentication by username
ACCOUNT_EMAIL_REQUIRED = True # Email is mandatory
ACCOUNT_EMAIL_VERIFICATION = 'optional' # Email verification is optional

ACCOUNT_FORMS = {
    'login': 'users.forms.CustomLoginForm',
    'signup': 'users.forms.CustomSignupForm',
}



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]   

ROOT_URLCONF = 'properties.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'form_tags': 'templatetags.form_tags',
            }
        },
    },
]

WSGI_APPLICATION = 'properties.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'haven_heights',
    'USER':'root',
    'PASSWORD': 'alberteinstein1234',
    'HOST': 'localhost', # Usually 'localhost'
    'PORT': '3306',
    'OPTIONS': {
        'sql_mode': 'STRICT_TRANS_TABLES', #addresses the database warnings related to MariaDB's Strict Mode and unique constraints with conditions. Enabling Strict Mode ensures data integrity by converting certain warnings into errors, thus preventing potentially problematic data from being inserted into the database.
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = (BASE_DIR, 'static')

MEDIA_URL = '/media/' 
MEDIA_ROOT = (BASE_DIR, 'media')
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
  
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
